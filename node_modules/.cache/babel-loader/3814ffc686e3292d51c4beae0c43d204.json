{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\IntMag\\\\intMAgClient\\\\src\\\\components\\\\navigation\\\\typesNavigation\\\\typesNavigation.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useGetTypesQuery } from '../../redux/api/server.api';\nimport './typesNavigation.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TypesNavigation(_ref) {\n  _s();\n\n  let {\n    setType\n  } = _ref;\n  const {\n    data: Types,\n    isLoading\n  } = useGetTypesQuery('');\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"fdsfs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"typeNavigation\",\n    children: Types.map(el => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"typeNavigation_wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"typeNavigation_el\",\n        onClick: e => setType(el.id),\n        children: el.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TypesNavigation, \"JV4dK/NSlMPo0BuonQ1umwcuRm8=\", false, function () {\n  return [useGetTypesQuery];\n});\n\n_c = TypesNavigation;\n\nvar _c;\n\n$RefreshReg$(_c, \"TypesNavigation\");","map":{"version":3,"names":["React","useGetTypesQuery","TypesNavigation","setType","data","Types","isLoading","map","el","e","id","name"],"sources":["E:/Projects/IntMag/intMAgClient/src/components/navigation/typesNavigation/typesNavigation.tsx"],"sourcesContent":["import React from 'react'\r\nimport { useGetTypesQuery } from '../../redux/api/server.api'\r\nimport './typesNavigation.scss'\r\nexport default function TypesNavigation({setType}:any) {\r\n    const {data:Types,isLoading}:any = useGetTypesQuery('')\r\n\r\n\r\n    if(isLoading){\r\n        return <p>fdsfs</p>\r\n    }\r\n  return (\r\n    <div className='typeNavigation'>\r\n      {Types.map((el:any)=>\r\n      <div className='typeNavigation_wrap'>\r\n        <li className='typeNavigation_el' onClick={(e)=>setType(el.id)}>{el.name}</li>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,4BAAjC;AACA,OAAO,wBAAP;;AACA,eAAe,SAASC,eAAT,OAAwC;EAAA;;EAAA,IAAf;IAACC;EAAD,CAAe;EACnD,MAAM;IAACC,IAAI,EAACC,KAAN;IAAYC;EAAZ,IAA6BL,gBAAgB,CAAC,EAAD,CAAnD;;EAGA,IAAGK,SAAH,EAAa;IACT,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EACH,oBACE;IAAK,SAAS,EAAC,gBAAf;IAAA,UACGD,KAAK,CAACE,GAAN,CAAWC,EAAD,iBACX;MAAK,SAAS,EAAC,qBAAf;MAAA,uBACE;QAAI,SAAS,EAAC,mBAAd;QAAkC,OAAO,EAAGC,CAAD,IAAKN,OAAO,CAACK,EAAE,CAACE,EAAJ,CAAvD;QAAA,UAAiEF,EAAE,CAACG;MAApE;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADC;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;GAhBuBT,e;UACeD,gB;;;KADfC,e"},"metadata":{},"sourceType":"module"}