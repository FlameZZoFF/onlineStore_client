{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\IntMag\\\\intMAgClient\\\\src\\\\components\\\\navigation\\\\typesNavigation\\\\typesNavigation.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useGetTypesQuery } from '../../redux/api/server.api';\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks/hooks';\nimport { setType } from '../../redux/slices/typesSlice';\nimport './typesNavigation.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TypesNavigation(_ref) {\n  _s();\n\n  let {\n    setBrand\n  } = _ref;\n  const {\n    data: Types,\n    isLoading\n  } = useGetTypesQuery('');\n  const type = useAppSelector(state => state.type.type);\n  const dispatch = useAppDispatch();\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"fdsfs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"typeNavigation\",\n    children: Types.map(el => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"typeNavigation_wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        className: type == el.id ? 'typeNavigation_el-active typeNavigation_el' : 'typeNavigation_el',\n        onClick: e => dispatch(setType(el.id)),\n        children: el.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, el.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TypesNavigation, \"XKCr+cBNUZholp2GS9i0Im4tsTc=\", false, function () {\n  return [useGetTypesQuery, useAppSelector, useAppDispatch];\n});\n\n_c = TypesNavigation;\n\nvar _c;\n\n$RefreshReg$(_c, \"TypesNavigation\");","map":{"version":3,"names":["React","useGetTypesQuery","useAppDispatch","useAppSelector","setType","TypesNavigation","setBrand","data","Types","isLoading","type","state","dispatch","map","el","id","e","name"],"sources":["E:/Projects/IntMag/intMAgClient/src/components/navigation/typesNavigation/typesNavigation.tsx"],"sourcesContent":["import React from 'react'\r\nimport { useGetTypesQuery } from '../../redux/api/server.api'\r\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks/hooks'\r\nimport { setType } from '../../redux/slices/typesSlice'\r\nimport './typesNavigation.scss'\r\n\r\ninterface typesProp{\r\n  setBrand:() => void\r\n}\r\n\r\nexport default function TypesNavigation({setBrand}:typesProp) {\r\n    const {data:Types,isLoading}:any = useGetTypesQuery('')\r\n    const type = useAppSelector(state=>state.type.type)\r\n    const dispatch = useAppDispatch()\r\n\r\n    if(isLoading){\r\n        return <p>fdsfs</p>\r\n    }\r\n  return (\r\n    <div className='typeNavigation'>\r\n      {Types.map((el:any)=>\r\n      <div key={el.id} className='typeNavigation_wrap'>\r\n        <li className={type == el.id ? 'typeNavigation_el-active typeNavigation_el' : 'typeNavigation_el'} onClick={(e)=>dispatch(setType(el.id))}>{el.name}</li>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,4BAAjC;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,yBAA/C;AACA,SAASC,OAAT,QAAwB,+BAAxB;AACA,OAAO,wBAAP;;AAMA,eAAe,SAASC,eAAT,OAA+C;EAAA;;EAAA,IAAtB;IAACC;EAAD,CAAsB;EAC1D,MAAM;IAACC,IAAI,EAACC,KAAN;IAAYC;EAAZ,IAA6BR,gBAAgB,CAAC,EAAD,CAAnD;EACA,MAAMS,IAAI,GAAGP,cAAc,CAACQ,KAAK,IAAEA,KAAK,CAACD,IAAN,CAAWA,IAAnB,CAA3B;EACA,MAAME,QAAQ,GAAGV,cAAc,EAA/B;;EAEA,IAAGO,SAAH,EAAa;IACT,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EACH,oBACE;IAAK,SAAS,EAAC,gBAAf;IAAA,UACGD,KAAK,CAACK,GAAN,CAAWC,EAAD,iBACX;MAAiB,SAAS,EAAC,qBAA3B;MAAA,uBACE;QAAI,SAAS,EAAEJ,IAAI,IAAII,EAAE,CAACC,EAAX,GAAgB,4CAAhB,GAA+D,mBAA9E;QAAmG,OAAO,EAAGC,CAAD,IAAKJ,QAAQ,CAACR,OAAO,CAACU,EAAE,CAACC,EAAJ,CAAR,CAAzH;QAAA,UAA4ID,EAAE,CAACG;MAA/I;QAAA;QAAA;QAAA;MAAA;IADF,GAAUH,EAAE,CAACC,EAAb;MAAA;MAAA;MAAA;IAAA,QADC;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;GAjBuBV,e;UACeJ,gB,EACtBE,c,EACID,c;;;KAHGG,e"},"metadata":{},"sourceType":"module"}