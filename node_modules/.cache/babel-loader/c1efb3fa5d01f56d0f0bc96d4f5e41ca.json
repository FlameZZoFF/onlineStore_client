{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport { serverApi } from \"./api/server.api\";\nimport authSlice from \"./slices/authSlice\";\nimport userSlice from \"./slices/userSlice\";\nexport const store = configureStore({\n  reducer: {\n    [serverApi.reducerPath]: serverApi.reducer,\n    user: userSlice,\n    auth: authSlice\n  },\n  middleware: getDefMiddleWare => getDefMiddleWare().concat(serverApi.middleware)\n});","map":{"version":3,"names":["configureStore","serverApi","authSlice","userSlice","store","reducer","reducerPath","user","auth","middleware","getDefMiddleWare","concat"],"sources":["E:/Projects/IntMag/intMAgClient/src/components/redux/index.ts"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { serverApi } from \"./api/server.api\";\r\nimport authSlice from \"./slices/authSlice\";\r\nimport userSlice from \"./slices/userSlice\";\r\n\r\n\r\nexport const store = configureStore({\r\n    reducer:{\r\n       [serverApi.reducerPath]:serverApi.reducer,\r\n       user:userSlice,\r\n       auth:authSlice,\r\n    },\r\n    middleware: getDefMiddleWare => getDefMiddleWare().concat(serverApi.middleware)\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch "],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AAGA,OAAO,MAAMC,KAAK,GAAGJ,cAAc,CAAC;EAChCK,OAAO,EAAC;IACL,CAACJ,SAAS,CAACK,WAAX,GAAwBL,SAAS,CAACI,OAD7B;IAELE,IAAI,EAACJ,SAFA;IAGLK,IAAI,EAACN;EAHA,CADwB;EAMhCO,UAAU,EAAEC,gBAAgB,IAAIA,gBAAgB,GAAGC,MAAnB,CAA0BV,SAAS,CAACQ,UAApC;AANA,CAAD,CAA5B"},"metadata":{},"sourceType":"module"}